# AoC 2024
# Day 13
#
# Dr Bob

print( f'Puzzle 1 result: {sum([(px * bdy - py * bdx) // det * 3 + (adx * py - ady * px) // det for adx, ady, bdx, bdy, px, py in [[int(p.lstrip()[2:]) for p in [e.strip() for e in open("input.txt", "r").readlines()][n].split(":")[1].lstrip().split(",")] + [int(p.lstrip()[2:]) for p in [e.strip() for e in open("input.txt", "r").readlines()][n+1].split(":")[1].lstrip().split(",")] + [int(p.lstrip()[2:]) for p in [e.strip() for e in open("input.txt", "r").readlines()][n+2].split(":")[1].lstrip().split(",")] for n in range(0, len([e.strip() for e in open("input.txt", "r").readlines()]), 4)] if not (px * bdy - py * bdx) % (det := (adx * bdy - bdx * ady)) and not (adx * py - ady * px) % det])}\nPuzzle 2 result: {sum([(px * bdy - py * bdx) // det * 3 + (adx * py - ady * px) // det for adx, ady, bdx, bdy, px, py in [[int(p.lstrip()[2:]) for p in [e.strip() for e in open("input.txt", "r").readlines()][n].split(":")[1].lstrip().split(",")] + [int(p.lstrip()[2:]) for p in [e.strip() for e in open("input.txt", "r").readlines()][n+1].split(":")[1].lstrip().split(",")] + [int(p.lstrip()[2:])+10000000000000 for p in [e.strip() for e in open("input.txt", "r").readlines()][n+2].split(":")[1].lstrip().split(",")] for n in range(0, len([e.strip() for e in open("input.txt", "r").readlines()]), 4)] if not (px * bdy - py * bdx) % (det := (adx * bdy - bdx * ady)) and not (adx * py - ady * px) % det])}')
